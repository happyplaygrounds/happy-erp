
# playworldFreight.pdf.prawn

test = "PWfreight-"+@happyvendor.vendor_name+"-"+@happyvendor.id.to_s+"-"+@happyquote.id.to_s+"-"+DateTime.now.strftime('%m-%d-%Y-%H%M%S').to_s+".pdf"

#test = @happyquote.happy_customer.customer_name+"-"+@happyquote.id.to_s+"-"+DateTime.now.in_time_zone("Central Time (US & Canada)").strftime('%m-%d-%Y-%H%M%S').to_s+".pdf"
#test = "tmp/test.pdf"

prawn_document(filename: test, disposition: "attachment") do |pdf|
#prawn_document() do |pdf|

  logopath = 'HP_Logo.jpg'     
  initial_y = pdf.cursor       
  initialmove_y = 5            
  address_x = 0                
  freight_table1_x = 0         
  freight_table2_x = 325         
  quote_header_x = 325         
  quote_certs_x = 355          
  lineheight_y = 12            
  font_size = 9                
  
  pdf.move_down initialmove_y  
  
  # Add the font style and size
  pdf.font "Helvetica"         
  pdf.font_size font_size  

     #body
     pdf.bounding_box [pdf.bounds.left, (pdf.bounds.top - 220)], :width  => pdf.bounds.width + 30, :height => 580 do
     pdf.text "FREIGHT DETAILS:", align: :center, size: 11, style: :bold
     pdf.text "(ATTACH BOM, DRAWING, OR PRICING SCHEDULE LISTING ALL PRODUCT TO BE SHIPPEED BY PLAYWORLD)", align: :center, size: 10

     quote_items_header = ["QTY:", "PRODUCT & DESCRIPTION","WT:"]

  quote_items_data = []
  quote_items_data << quote_items_header
  quote_items_data2 = []
  quote_items_data2 << quote_items_header

  $loopCount = 0;
  $weight = 0;
  @happyquote.happy_quote_lines.map.with_index do |item, index|
                puts("loop #$loopCount");
                puts("index #{index}");
                puts("#{@happyquote.happy_quote_lines.size}");
                if $loopCount <= 12
number_with_precision($weight, :precision => 2, :delimiter => ',')
           	  quote_items_data << [ item.quantity, item.product_id,number_with_precision((item.weight*item.quantity), :precision => 2, :delimiter => ',') ]
                else
           	  quote_items_data2 << [ item.quantity, item.product_id,(item.weight*item.quantity) ]
                end

                $weight = $weight + (item.weight*item.quantity) 
                $loopCount +=1;
  end

  $remainingCells = 24 - $loopCount

  $i=0

  while $i < $remainingCells do 
                if $i < (12 - $loopCount)
           	   quote_items_data << [ " ", " "," " ]
 		else
           	   quote_items_data2 << [ " ", " "," " ]
                end
       $i +=1
  end


     last_measured_y = pdf.cursor

  pdf.table(quote_items_data, :width =>  250, :header => true) do
    style(row(1..-1).columns(0..-1), :padding => [1, 5, 1, 5], :borders => [:top, :right, :bottom, :left])
    style(row(0), :font_style => :bold)
    style(row(0).columns(0..-1), :borders => [:top, :left, :right, :bottom])
    style(row(0).columns(0), :borders => [:top, :left, :bottom])
  #  style(row(-1), :border_width => 10)
    style(column(1..-1), :align => :left)
    style(column(3..-1), :align => :left)
    style(column(4..-1), :align => :left)
    style(column(5..-1), :align => :left)
    style(column(6..-1), :align => :left)
    style(columns(0), :width => 50)
    style(columns(1), :width => 140)
    style(columns(2), :width => 60)
  end

     pdf.move_cursor_to last_measured_y 

  pdf.table(quote_items_data2, :width =>  250, :position => 280, :header => true) do
    style(row(1..-1).columns(0..-1), :padding => [1, 5, 1, 5], :borders => [:top, :right, :bottom, :left])
    style(row(0), :font_style => :bold)
    style(row(0).columns(0..-1), :borders => [:top, :left, :right, :bottom])
    style(row(0).columns(0), :borders => [:top, :left, :bottom])
  #  style(row(-1), :border_width => 10)
    style(column(1..-1), :align => :left)
    style(column(3..-1), :align => :left)
    style(column(4..-1), :align => :left)
    style(column(5..-1), :align => :left)
    style(column(6..-1), :align => :left)
    style(columns(0), :width => 50)
    style(columns(1), :width => 140)
    style(columns(2), :width => 60)
  end


            weight_total = [] 
            weight_total << ["TOTAL WEIGHT:", number_with_precision($weight, :precision => 2, :delimiter => ',')  ]

	pdf.table(weight_total, :width =>  200, :position => 180, :header => false) do
          style(columns(0), :width => 100)
        end


     if pdf.cursor < 200
        #pdf.text pdf.cursor, :size => 14
        pdf.start_new_page
        pdf.stroke_horizontal_rule
        subtotal_y = 500 
     else
        subtotal_y = pdf.cursor - 25 
     end

     last_measured_y = pdf.cursor

    
     pdf.move_down 10


     pdf.text "DELIVERY DETAILS:", align: :center, size: 12, style: :bold


  debug(params)
  table3_header_data = [ 
    ["LIFTGATE?", "N"],
    ["INSIDE DELIVERY?", "N"],
    ["CALL BEFORE?", "Y"],
    ["RESIDENTIAL/BUSINESS/SCHOOL/CHURCH?", @type_of_business],
    ["CAN FULL SIZE TRAILER DELIVER?", "Y"],
    ["DROP TRAILER? (# OF DAYS?)", "N"],
    ["DELIVERY DATE REQUIRED?", "N"],
    ["STANDARD/EXPEDITED/GUARANTEED DELVY?", "N"],
    ["OTHER?", ""]
  ]

  pdf.table(table3_header_data, :position => freight_table1_x, :width => 475) do
    style(row(0..2).columns(0..1), :padding => [1, 5, 1, 5], :borders => [:top, :left, :right, :bottom])
    style(column(0), :align => :center)
  end

                pdf.move_down 20
     pdf.draw_text "PLAYWORLD USE:", :at => [130, pdf.cursor], size: 12, style: :bold
                last_measured_y = pdf.cursor
                pdf.move_down 12
                last_measured_y = pdf.cursor

  table3_header_data = [ 
    ["QUOTED BY:", "                          "],
    ["DATE QUOTED:", ""],
    ["FREIGHT QUOTE ID:", ""],
    ["FREIGHT QUOTE:", ""],
    ["FREIGHT CARRIER:", ""],
    ["METHOD OF DELIVERY:", ""]
  ]

  pdf.table(table3_header_data, :position => freight_table1_x, :width => 325, :cell_style => { :size => 12 }) do
    style(row(0..5).columns(0..1), :padding => [1, 5, 1, 5], :borders => [:top, :left, :right, :bottom])
    style(column(0), :align => :center)
  end


     pdf.move_cursor_to last_measured_y 


     	pdf.draw_text "DIRECT SHIP QUOTES REQUIRED FOR THE", :at => [350, pdf.cursor], size: 10, style: :bold
        pdf.move_down 10
     	pdf.draw_text "FOLLOWING:", :at => [350, pdf.cursor], size: 10, style: :bold
        pdf.move_down 10
     	pdf.draw_text "-Cantilever Shade Products", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "-Boulders (except for Raptor Head/Tail and Fossil Jan", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "-XL Shade Hats", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "-CADRES", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "-TimberStacks", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "Sculpted Play Items: Jungle Rock Link and Climber,", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "Gorilla over Log, Blue Whale and Tail, LadyBug, Log", :at => [350, pdf.cursor], size: 9
        pdf.move_down 10
     	pdf.draw_text "Steps, Tree Log, Rabbit, Hammerhead Shark", :at => [350, pdf.cursor], size: 9
 

#end # end bounding box for subtotal


end


    pdf.repeat :all do

        # header
        pdf.bounding_box [pdf.bounds.left, pdf.bounds.top], :width  => pdf.bounds.width do
          
  		pdf.text "PLAYWORLD FREIGHT QUOTE FORM", align: :center, size: 14, style: :bold
  		pdf.fill_color "0093DD"
  		pdf.text "freight@playworld.com", align: :center, size: 12, style: :bold
  		pdf.fill_color "000000"
  		pdf.text "LTL FREIGHT QUOTES VALID FOR 90 DAYS", align: :center, size: 14, style: :bold
  		pdf.text "Truckload/Direct Ship Quotes Valid 30 DAYS", align: :center, size: 14, style: :bold
                pdf.move_down 12

  $submitted_by = @username.gsub(/\./,' ')

  table1_header_data = [ 
    ["DISTRIBUTOR:", "Happy Playgrounds"],
    ["SUBMITTED BY:", $submitted_by],
    ["DATE:", " "]
  ]

  pdf.table(table1_header_data, :position => freight_table1_x, :width => 280, :cell_style => { :size => 10 }) do
    style(row(0..2).columns(0..1), :padding => [1, 5, 1, 5], :borders => [:top, :left, :right, :bottom])
    style(column(1), :align => :left, :width => 172)
  end

                pdf.move_down 12
  $cityState =  @happyquote.shipping_city + ", " + @happyquote.shipping_state;
  puts ($cityState)

  table1_header_data = [ 
    ["CONSIGNEE NAME: ", @happyquote.happy_customer.customer_name],
    ["CITY & STATE: ", $cityState],
    ["CONTACT:", " "],
    ["EMAIL: ", @useremail]
  ]

  pdf.table(table1_header_data, :position => freight_table1_x, :width => 280, :cell_style => { :size => 10 }) do
    style(row(0..2).columns(0..1), :padding => [1, 5, 1, 5], :borders => [:top, :left, :right, :bottom])
    style(column(1), :align => :left)
  end

  pdf.move_cursor_to 60.0
  $address =  @happyquote.shipping_street1 +  @happyquote.shipping_street2;

  table1_header_data = [ 
    ["ADDRESS:", $address],
    ["ZIP CODE:", @happyquote.shipping_zipcode],
    ["TELEPHONE:", " "],
  ]

  pdf.table(table1_header_data, :position => freight_table2_x, :width => 225, :cell_style => { :size => 10 }) do
    style(row(0..2).columns(0..1), :padding => [1, 5, 1, 5], :borders => [:top, :left, :right, :bottom])
    style(column(1), :align => :left, :width => 152)
  end


  pdf.move_down 30
        end

    end # this end needs to be identified. Won't work if removed

end # Prawn ddo


